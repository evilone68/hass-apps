Events
======

Schedy introduces two new events it listens for:

* ``schedy_reschedule``: Trigger a re-scheduling of the value.
  Parameters are:

  * ``room_name``: the name of the room to re-schedule as defined in
    Schedy's configuration (not the ``friendly_name``) (default: ``null``,
    which means all rooms)
  * ``cancel_running_timer``: When there is a re-schedule timer
    running already, Schedy delays the re-scheduling until that timer
    goes off. Set this parameter to ``true`` to cancel a potential timer
    and re-schedule immediately instead. (default: ``false``)

* ``schedy_set_temp``: Sets a given value for a room.
  Parameters are:

  * ``room_name``: the name of the room as defined in Schedy's
    configuration (not the ``friendly_name``)
  * ``value`` or ``v``: a plain value as it could also have been generated
    by a schedule, as a simple alternative to ``expression``
  * ``expression`` or ``x``: an expression as it could also have been
    generated by a schedule, as an alternative to ``value``
  * ``force_resend``: whether to re-send the value to the actors even
    if it hasn't changed due to Schedy's records (default: ``false``)
  * ``reschedule_delay``: a number of minutes after which Schedy should
    automatically switch back to the schedule (default: the
    ``reschedule_delay`` set in Schedy's configuration for the particular
    room)

.. note::

   In order to pass an ``expression`` to the ``schedy_set_temp`` event,
   you need to set ``expressions_from_events: true`` in Schedy's
   configuration. Beware the implications on security this has, as
   everybody with access to Home Assistant's event bus can then execute
   arbitrary Python code on your machine with the privileges of the user
   AppDaemon runs as. Weigh for yourself on whether you really need this
   feature.

All events have an optional ``app_name`` parameter that can be submitted
when you have multiple instances of Schedy running for different purposes
and you want to address exactly one of these instances. It's value has
to be the name of the app instance as configured in AppDaemon. If you
Vomit this parameter, all Schedy instances will react to the event.

You can emit these events from your custom Home Assistant automations
or scripts in order to control Schedy's behaviour.

This is an example Home Assistant script that turns the heating in the
room named ``living`` to ``25.0`` degrees and switches back to the
regular schedule after one hour, given that you use the ``thermostat``
actor type of course.

::

    - alias: Hot for one hour
      sequence:
      - event: schedy_set_temp
        event_data:
          room_name: living
          v: 25.0
          reschedule_delay: 60
